// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Launchdarkly
{
    public static class GetTeamMember
    {
        /// <summary>
        /// Provides a LaunchDarkly team member data source.
        /// 
        /// This data source allows you to retrieve team member information from your LaunchDarkly organization.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Launchdarkly = Pulumi.Launchdarkly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Launchdarkly.GetTeamMember.Invoke(new()
        ///     {
        ///         Email = "example@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTeamMemberResult> InvokeAsync(GetTeamMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamMemberResult>("launchdarkly:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a LaunchDarkly team member data source.
        /// 
        /// This data source allows you to retrieve team member information from your LaunchDarkly organization.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Launchdarkly = Pulumi.Launchdarkly;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Launchdarkly.GetTeamMember.Invoke(new()
        ///     {
        ///         Email = "example@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTeamMemberResult> Invoke(GetTeamMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamMemberResult>("launchdarkly:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamMemberArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique email address associated with the team member.
        /// </summary>
        [Input("email", required: true)]
        public string Email { get; set; } = null!;

        /// <summary>
        /// The 24 character alphanumeric ID of the team member.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetTeamMemberArgs()
        {
        }
        public static new GetTeamMemberArgs Empty => new GetTeamMemberArgs();
    }

    public sealed class GetTeamMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique email address associated with the team member.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// The 24 character alphanumeric ID of the team member.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetTeamMemberInvokeArgs()
        {
        }
        public static new GetTeamMemberInvokeArgs Empty => new GetTeamMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamMemberResult
    {
        public readonly ImmutableArray<string> CustomRoles;
        public readonly string Email;
        /// <summary>
        /// The team member's given name.
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The 24 character alphanumeric ID of the team member.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The team member's family name.
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// The role associated with team member. Possible roles are `owner`, `reader`, `writer`, or `admin`.
        /// </summary>
        public readonly string Role;

        [OutputConstructor]
        private GetTeamMemberResult(
            ImmutableArray<string> customRoles,

            string email,

            string firstName,

            string id,

            string lastName,

            string role)
        {
            CustomRoles = customRoles;
            Email = email;
            FirstName = firstName;
            Id = id;
            LastName = lastName;
            Role = role;
        }
    }
}
